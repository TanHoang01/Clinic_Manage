/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Screens;
import Model.*;
import java.awt.Font;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Timestamp;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Tan Hoang-Pride
 */
public class Staff_Bill_Form extends javax.swing.JInternalFrame {
    static String url = "jdbc:postgresql://localhost:5432/clinic_manage";
    static String unameDB = "postgres";
    static String passDB = "123456";
    /**
     * Creates new form Staff_Bill_Form
     */
    public Staff_Bill_Form() {
        initComponents();
        show_Services();
    }
     public ArrayList<Service_Model> serviceList(){
        String query = "select * from service";
        ArrayList<Service_Model> servicesList = new ArrayList<>();
        try{
            Class.forName("org.postgresql.Driver");
        }catch (ClassNotFoundException ex){
            ex.printStackTrace();
        }
        try{
            Connection con = DriverManager.getConnection(url, unameDB, passDB);
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(query);
            Service_Model services;
            while(rs.next()){
               services = new Service_Model(rs.getInt("id"), rs.getString("name"),rs.getLong("price"));
               servicesList.add(services);
               }
           } catch(SQLException ex){
            ex.printStackTrace();
        }
        return servicesList;
    }
    
    public void show_Services(){
        ArrayList<Service_Model> list = serviceList();
        DefaultTableModel model = (DefaultTableModel) service_table.getModel();
        Object[] row = new Object[3];
        for(int i = 0; i < list.size();i++){
            row[0] = list.get(i).getid();
            row[1] = list.get(i).getname();
            row[2] = list.get(i).getprice();
            model.addRow(row);
        }
    }
    public Service_Model draftService(){
        int selected = service_table.getSelectedRow();
        Service_Model services;
        services = new Service_Model(Integer.valueOf(service_table.getValueAt(selected, 0).toString()),service_table.getValueAt(selected, 1).toString(),
                Long.valueOf(service_table.getValueAt(selected, 2).toString()));
        return services;
    }
    
    public void show_draftService(){
        Service_Model services = draftService();
        DefaultTableModel model = (DefaultTableModel)draft_service_table.getModel();
        Object[] row = new Object[3];
        row[0] = services.getid();
        row[1] = services.getname();
        row[2] = services.getprice();
        model.addRow(row);
    }
    public int countService(){
        int count = 0;
        String query = "select * from service_bill";
        try{
            Class.forName("org.postgresql.Driver");
        }catch (ClassNotFoundException ex){
            ex.printStackTrace();
        }
        try{
            Connection con = DriverManager.getConnection(url, unameDB, passDB);
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(query);
            Patient_Model patients;
            while(rs.next()){
               count = count + 1;
               }
           } catch(SQLException ex){
            ex.printStackTrace();
        }
        return count;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tp_bill = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        tf_patientname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tf_staffname = new javax.swing.JTextField();
        bt_add_medicine = new javax.swing.JButton();
        bt_remove_medicine = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        service_table = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        draft_service_table = new javax.swing.JTable();
        bt_finish = new javax.swing.JButton();
        bt_clear = new javax.swing.JButton();
        bt_print = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Bills");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tp_bill.setEditable(false);
        jScrollPane3.setViewportView(tp_bill);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 250, 370));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screens/icon/user.png"))); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 30, 40));

        tf_patientname.setText("Patient Name");
        tf_patientname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_patientnameFocusGained(evt);
            }
        });
        jPanel1.add(tf_patientname, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 200, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screens/icon/user.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 30, 40));

        tf_staffname.setText("Staff Name");
        tf_staffname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_staffnameFocusGained(evt);
            }
        });
        jPanel1.add(tf_staffname, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 200, -1));

        bt_add_medicine.setText("ADD");
        bt_add_medicine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_add_medicineMouseClicked(evt);
            }
        });
        jPanel1.add(bt_add_medicine, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 80, -1));

        bt_remove_medicine.setText("REMOVE");
        bt_remove_medicine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_remove_medicineMouseClicked(evt);
            }
        });
        jPanel1.add(bt_remove_medicine, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, -1, -1));

        service_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Medicine Name", "Price"
            }
        ));
        jScrollPane5.setViewportView(service_table);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 290, 510));

        draft_service_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Medicine Name", "Price "
            }
        ));
        jScrollPane4.setViewportView(draft_service_table);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, 290, 510));

        bt_finish.setText("Finish");
        bt_finish.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_finishMouseClicked(evt);
            }
        });
        jPanel1.add(bt_finish, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 80, -1));

        bt_clear.setText("Clear");
        bt_clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_clearMouseClicked(evt);
            }
        });
        jPanel1.add(bt_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 500, 80, -1));

        bt_print.setText("Print");
        bt_print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_printMouseClicked(evt);
            }
        });
        jPanel1.add(bt_print, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 500, 80, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 868, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_patientnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_patientnameFocusGained
        tf_patientname.setText("");
    }//GEN-LAST:event_tf_patientnameFocusGained

    private void tf_staffnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_staffnameFocusGained
        tf_staffname.setText("");
    }//GEN-LAST:event_tf_staffnameFocusGained

    private void bt_add_medicineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_add_medicineMouseClicked
        show_draftService();
    }//GEN-LAST:event_bt_add_medicineMouseClicked

    private void bt_remove_medicineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_remove_medicineMouseClicked
        ((DefaultTableModel)draft_service_table.getModel()).removeRow(draft_service_table.getSelectedRow());
    }//GEN-LAST:event_bt_remove_medicineMouseClicked

    private void bt_finishMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_finishMouseClicked
        java.util.Date utilDate = new java.util.Date();
        tp_bill.setText("                         "+"M Y C L I N I C\n");
        tp_bill.setText(tp_bill.getText()+"                           "+"Service Bill\n");
        tp_bill.setText(tp_bill.getText()+"           "+utilDate+"\n"+" "+"\n");
        tp_bill.setText(tp_bill.getText()+"Patient Name: "+tf_patientname.getText()+"\n"+" "+"\n");
        tp_bill.setText(tp_bill.getText()+"Staff Name: "+tf_staffname.getText()+"\n"+" "+"\n");
        tp_bill.setText(tp_bill.getText()+"Medicine List: \n");
        DefaultTableModel service_model = (DefaultTableModel)draft_service_table.getModel();
        for(int i = 0;i<draft_service_table.getRowCount();i++){
            String service = service_model.getValueAt(i, 1).toString() + " -  " + "Price: " + service_model.getValueAt(i, 2).toString();
            tp_bill.setText(tp_bill.getText()+(i+1)+". " + service +"\n");
        }
        tp_bill.setText(tp_bill.getText()+" "+"\n");
        long total = 0;
        for(int i = 0;i<draft_service_table.getRowCount();i++){
            total = total + Long.valueOf(draft_service_table.getValueAt(i, 2).toString());
        }
        tp_bill.setText(tp_bill.getText()+"                                      "+"Total Price: "+total+"\n"+" "+"\n");
        tp_bill.setText(tp_bill.getText()+"                        "+"Thank You <3");
    }//GEN-LAST:event_bt_finishMouseClicked

    private void bt_clearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_clearMouseClicked
        tp_bill.setText(null);
    }//GEN-LAST:event_bt_clearMouseClicked

    private void bt_printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_printMouseClicked
        for(int i = 0; i < draft_service_table.getRowCount();i++){
            try{
                Class.forName("org.postgresql.Driver");
            }catch (ClassNotFoundException ex){
                ex.printStackTrace();
            }
            try{
                Connection con = DriverManager.getConnection(url, unameDB, passDB);
                String prescription_query = "INSERT INTO public.service_bill_detail(\n" +"	service_bill_id, service_id)\n" +"	VALUES (?, ?);";
                PreparedStatement prescription_pst = con.prepareStatement(prescription_query);
                prescription_pst.setInt(1, countService() + 1);
                prescription_pst.setInt(2, Integer.valueOf(draft_service_table.getValueAt(i, 0).toString()));
                prescription_pst.executeUpdate();
            }catch(SQLException ex){
                JOptionPane.showMessageDialog(null, "Error Something Go Wrong");
                ex.printStackTrace();
            }
        }
        try{
            Class.forName("org.postgresql.Driver");
        }catch (ClassNotFoundException ex){
            ex.printStackTrace();
        }
        try{
            Connection con = DriverManager.getConnection(url, unameDB, passDB);
            // Add new patient query
            String bill_query = "INSERT INTO public.service_bill(\n" +"	id, date_time, total_price, patient_name, created_by)\n" +"	VALUES (?, ?, ?, ?, ?);";
            PreparedStatement bill_pst = con.prepareStatement(bill_query);
            bill_pst.setInt(1, countService() + 1);
            Timestamp timestamp = new Timestamp(System.currentTimeMillis());
            bill_pst.setTimestamp(2, timestamp);
            long total = 0;
            for(int i = 0;i<draft_service_table.getRowCount();i++){
                total = total + Long.valueOf(draft_service_table.getValueAt(i, 2).toString());
            }
            bill_pst.setLong(3, total);
            bill_pst.setString(4, tf_patientname.getText());
            bill_pst.setString(5, tf_staffname.getText());
            bill_pst.executeUpdate();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error Something Go Wrong");
            ex.printStackTrace();
        }
        JOptionPane.showMessageDialog(null, "Make Service Bill Finish");
        try{
            boolean print = tp_bill.print();
            if(print){
                JOptionPane.showMessageDialog(null, "Print Complete");
            }else{
                JOptionPane.showMessageDialog(null, "Print Uncomplete");
            }
        }catch(PrinterException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_bt_printMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_add_medicine;
    private javax.swing.JButton bt_clear;
    private javax.swing.JButton bt_finish;
    private javax.swing.JButton bt_print;
    private javax.swing.JButton bt_remove_medicine;
    private javax.swing.JTable draft_service_table;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable service_table;
    private javax.swing.JTextField tf_patientname;
    private javax.swing.JTextField tf_staffname;
    private javax.swing.JTextPane tp_bill;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Screens;
import Model.*;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.AbstractTableModel;
/**
 *
 * @author Tan Hoang-Pride
 */
public class Admin_Employee_Form extends javax.swing.JInternalFrame {
    static String url = "jdbc:postgresql://localhost:5432/clinic_manage";
    static String unameDB = "postgres";
    static String passDB = "123456";
    static String query = "select * from employee inner join account on employee.account_id=account.id";
    /**
     * Creates new form Admin_Employee_Form
     */
    public Admin_Employee_Form() {
        initComponents();
        show_Employees();
    }
    
     public ArrayList<Employee_Model> employeeList(){
        ArrayList<Employee_Model> employeesList = new ArrayList<>();
        try{
            Class.forName("org.postgresql.Driver");
        }catch (ClassNotFoundException ex){
            ex.printStackTrace();
        }
        try{
            Connection con = DriverManager.getConnection(url, unameDB, passDB);
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(query);
            Employee_Model employees;
            while(rs.next()){
               employees = new Employee_Model(rs.getInt("id"), rs.getString("type_of_job"), rs.getString("full_name"),
                       rs.getString("address"),rs.getString("email"),rs.getString("phone_number"),rs.getLong("salary")
                       ,rs.getInt("account_id"), rs.getString("username"), rs.getString("password"));
               employeesList.add(employees);
               }
           } catch(SQLException ex){
            ex.printStackTrace();
        }
        return employeesList;
    }
    // show data in table
    public void show_Employees(){
        ArrayList<Employee_Model> list = employeeList();
        DefaultTableModel model = (DefaultTableModel)employee_table.getModel();
        Object[] row = new Object[9];
        for(int i = 0; i < list.size();i++){
            row[0] = list.get(i).getid();
            row[1] = list.get(i).gettypeofjob();
            row[2] = list.get(i).getfullname();
            row[3] = list.get(i).getaddress();
            row[4] = list.get(i).getemail();
            row[5] = list.get(i).getphonenumber();
            row[6] = list.get(i).getsalary();
            row[7] = list.get(i).getusername();
            row[8] = list.get(i).getpassword();
            model.addRow(row);
        }
    }
    // clear data in table 
     public void clear_Employees(){
        DefaultTableModel model = (DefaultTableModel)employee_table.getModel();
        model.setRowCount(0);
    }
    public int countID(){
        int count = 0;
        String query = "select * from salary_payment";
        try{
            Class.forName("org.postgresql.Driver");
        }catch (ClassNotFoundException ex){
            ex.printStackTrace();
        }
        try{
            Connection con = DriverManager.getConnection(url, unameDB, passDB);
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(query);
            Patient_Model patients;
            while(rs.next()){
               count = count + 1;
               }
           } catch(SQLException ex){
            ex.printStackTrace();
        }
        return count;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tf_fullname = new javax.swing.JTextField();
        tf_phonenumber = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tf_password = new javax.swing.JTextField();
        cbb_typeofjob = new javax.swing.JComboBox<>();
        tf_salary = new javax.swing.JTextField();
        bt_add = new javax.swing.JButton();
        bt_remove = new javax.swing.JButton();
        bt_update = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        employee_table = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        tf_id = new javax.swing.JTextField();
        tf_address = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tf_username = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tf_email = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        bt_pay_salary = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Employees");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screens/icon/user.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 40, 30, 40));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screens/icon/envelope.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 30, 40));

        tf_fullname.setText("Full Name");
        tf_fullname.setToolTipText("");
        tf_fullname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_fullnameFocusGained(evt);
            }
        });
        jPanel1.add(tf_fullname, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 210, -1));

        tf_phonenumber.setText("Phone Number");
        tf_phonenumber.setToolTipText("");
        tf_phonenumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_phonenumberFocusGained(evt);
            }
        });
        jPanel1.add(tf_phonenumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 210, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screens/icon/phone-call.png"))); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 30, 40));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screens/icon/revenue.png"))); // NOI18N
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 40, 40));

        tf_password.setText("Password");
        tf_password.setToolTipText("");
        tf_password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_passwordFocusGained(evt);
            }
        });
        jPanel1.add(tf_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 90, 210, -1));

        cbb_typeofjob.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor", "Pharmacist", "Staff", " " }));
        jPanel1.add(cbb_typeofjob, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, 210, -1));

        tf_salary.setText("Salary");
        tf_salary.setToolTipText("");
        tf_salary.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_salaryFocusGained(evt);
            }
        });
        jPanel1.add(tf_salary, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, 210, -1));

        bt_add.setBackground(new java.awt.Color(255, 255, 255));
        bt_add.setText("ADD");
        bt_add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_addMouseClicked(evt);
            }
        });
        jPanel1.add(bt_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 130, 90, -1));

        bt_remove.setBackground(new java.awt.Color(255, 255, 255));
        bt_remove.setText("REMOVE");
        bt_remove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_removeMouseClicked(evt);
            }
        });
        jPanel1.add(bt_remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 130, 90, -1));

        bt_update.setBackground(new java.awt.Color(255, 255, 255));
        bt_update.setText("UPDATE");
        bt_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_updateMouseClicked(evt);
            }
        });
        jPanel1.add(bt_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 130, 90, -1));

        employee_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Role", "Full Name", "Address", "Email", "Phone Number", "Salary", "Username", "Password"
            }
        ));
        jScrollPane1.setViewportView(employee_table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 850, 350));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screens/icon/role.png"))); // NOI18N
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 30, 40));

        tf_id.setText("ID");
        tf_id.setToolTipText("");
        tf_id.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_idFocusGained(evt);
            }
        });
        jPanel1.add(tf_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 210, -1));

        tf_address.setText("Address");
        tf_address.setToolTipText("");
        tf_address.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_addressFocusGained(evt);
            }
        });
        jPanel1.add(tf_address, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, 210, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screens/icon/location.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, 30, 40));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screens/icon/user.png"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 30, 40));

        tf_username.setText("Username");
        tf_username.setToolTipText("");
        tf_username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_usernameFocusGained(evt);
            }
        });
        jPanel1.add(tf_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 50, 210, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screens/icon/id.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 30, 40));

        tf_email.setText("Email");
        tf_email.setToolTipText("");
        tf_email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_emailFocusGained(evt);
            }
        });
        jPanel1.add(tf_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 210, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screens/icon/lock.png"))); // NOI18N
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 80, 30, 40));

        bt_pay_salary.setBackground(new java.awt.Color(255, 255, 255));
        bt_pay_salary.setText("Pay Salary");
        bt_pay_salary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_pay_salaryMouseClicked(evt);
            }
        });
        jPanel1.add(bt_pay_salary, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, 90, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 868, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_fullnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_fullnameFocusGained
        tf_fullname.setText("");
    }//GEN-LAST:event_tf_fullnameFocusGained

    private void tf_phonenumberFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_phonenumberFocusGained
        tf_phonenumber.setText("");
    }//GEN-LAST:event_tf_phonenumberFocusGained

    private void tf_idFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_idFocusGained
        tf_id.setText("");
    }//GEN-LAST:event_tf_idFocusGained

    private void tf_passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_passwordFocusGained
        tf_password.setText("");
    }//GEN-LAST:event_tf_passwordFocusGained

    private void tf_salaryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_salaryFocusGained
        tf_salary.setText("");
    }//GEN-LAST:event_tf_salaryFocusGained

    private void bt_addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_addMouseClicked
        //make sure all textfield is filled
        if((!tf_fullname.getText().equals("")) && (!tf_phonenumber.getText().equals("")) && (!tf_address.getText().equals("")) && (!tf_id.getText().equals("")) 
            && (!tf_salary.getText().equals("")) && (!tf_username.getText().equals("")) && (!tf_password.getText().equals("")) && (!tf_email.getText().equals("")) 
            && (!tf_fullname.getText().equals("Full Name")) && (!tf_phonenumber.getText().equals("Phone Number")) && (!tf_address.getText().equals("Address")) 
            && (!tf_id.getText().equals("ID")) && (!tf_salary.getText().equals("Salary")) && (!tf_username.getText().equals("Username")) 
            && (!tf_password.getText().equals("Password")) && (!tf_email.getText().equals("Email"))){
            try{
                Class.forName("org.postgresql.Driver");
            }catch (ClassNotFoundException ex){
                ex.printStackTrace();
            }
            try{
                Connection con = DriverManager.getConnection(url, unameDB, passDB);
                // Add new employee query
                String employee_query = "INSERT INTO public.employee(\n" +"	id, type_of_job, full_name, email, phone_number, salary, account_id, address)\n" +"	VALUES (?, ?, ?, ?, ?, ?, ?, ?);";
                // Add new employee account query
                String account_query = "INSERT INTO public.account(\n" +"	id, username, password)\n" +"	VALUES (?, ?, ?);";
                PreparedStatement account_pst = con.prepareStatement(account_query);
                account_pst.setInt(1, Integer.valueOf(tf_id.getText()));
                account_pst.setString(2, tf_username.getText());
                account_pst.setString(3, tf_password.getText());
                account_pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Add Account Successfully");
                PreparedStatement employee_pst = con.prepareStatement(employee_query);
                employee_pst.setInt(1, Integer.valueOf(tf_id.getText()));
                employee_pst.setString(2, cbb_typeofjob.getSelectedItem().toString().toLowerCase());
                employee_pst.setString(3, tf_fullname.getText());
                employee_pst.setString(4, tf_phonenumber.getText());
                employee_pst.setString(5, tf_id.getText());
                employee_pst.setLong(6, Long.valueOf(tf_salary.getText()));
                employee_pst.setInt(7, Integer.valueOf(tf_id.getText()));
                employee_pst.setString(8, tf_address.getText());
                employee_pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Add Employee Successfully");
            }catch(SQLException ex){
                JOptionPane.showMessageDialog(null, "Error Something Go Wrong");
            }
            clear_Employees();
            show_Employees();
        }else{
            JOptionPane.showMessageDialog(null, "Please fill all blank space");
        }
    }//GEN-LAST:event_bt_addMouseClicked

    private void tf_addressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_addressFocusGained
        tf_address.setText("");
    }//GEN-LAST:event_tf_addressFocusGained

    private void tf_usernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_usernameFocusGained
        tf_username.setText("");
    }//GEN-LAST:event_tf_usernameFocusGained

    private void bt_removeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_removeMouseClicked
       //get selected row 
        int selected = employee_table.getSelectedRow();
        int dialogResult = JOptionPane.showConfirmDialog (null, "Would You Like to delete this employee?","Warning",JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION){
            try{
                Class.forName("org.postgresql.Driver");
            }catch (ClassNotFoundException ex){
                ex.printStackTrace();
            }
            try{
                    Connection con = DriverManager.getConnection(url, unameDB, passDB);
                    // delete employee query
                    String employee_query ="DELETE FROM public.employee\n" +"	WHERE id = ?;";
                    // delete account query
                    String account_query ="DELETE FROM public.account\n" +"	WHERE id = ?;";
                    PreparedStatement employee_pst = con.prepareStatement(employee_query);
                    employee_pst.setInt(1, Integer.valueOf(employee_table.getValueAt(selected, 0).toString()));
                    employee_pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Delete Employee Successfully");
                    PreparedStatement account_pst = con.prepareStatement(account_query);
                    account_pst.setInt(1, Integer.valueOf(employee_table.getValueAt(selected, 0).toString()));
                    account_pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Delete Account Successfully");
            }catch(SQLException ex){
                    JOptionPane.showMessageDialog(null, "Error Something Go Wrong");
                }
                clear_Employees();
                show_Employees();
        }else{
            
        }
    }//GEN-LAST:event_bt_removeMouseClicked

    private void bt_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_updateMouseClicked
        //get selected row 
        int selected = employee_table.getSelectedRow();
         try{
                Class.forName("org.postgresql.Driver");
            }catch (ClassNotFoundException ex){
                ex.printStackTrace();
            }
            try{
                    Connection con = DriverManager.getConnection(url, unameDB, passDB);
                    // update employee query
                    String employee_query ="UPDATE public.employee\n" +"	SET id=?, type_of_job=?, full_name=?, email=?, phone_number=?, salary=?, account_id=?, address=?\n" +"	WHERE id = ?;";
                    // update account query
                    String account_query ="UPDATE public.account\n" +"	SET id=?, username=?, password=?\n" +"	WHERE id = ?;";
                    PreparedStatement employee_pst = con.prepareStatement(employee_query);
                    employee_pst.setInt(1, Integer.valueOf(employee_table.getValueAt(selected, 0).toString()));
                    employee_pst.setString(2, employee_table.getValueAt(selected, 1).toString().toLowerCase());
                    employee_pst.setString(3,employee_table.getValueAt(selected, 2).toString());
                    employee_pst.setString(4, employee_table.getValueAt(selected, 4).toString());
                    employee_pst.setString(5, employee_table.getValueAt(selected, 5).toString());
                    employee_pst.setLong(6, Long.valueOf(employee_table.getValueAt(selected, 6).toString()));
                    employee_pst.setInt(7, Integer.valueOf(employee_table.getValueAt(selected, 0).toString()));
                    employee_pst.setString(8, employee_table.getValueAt(selected, 3).toString());
                    employee_pst.setInt(9, Integer.valueOf(employee_table.getValueAt(selected, 0).toString()));
                    employee_pst.executeUpdate();              
                    JOptionPane.showMessageDialog(null, "Update Employee Successfully");
                    PreparedStatement account_pst = con.prepareStatement(account_query);
                    account_pst.setInt(1, Integer.valueOf(employee_table.getValueAt(selected, 0).toString()));
                    account_pst.setString(2, employee_table.getValueAt(selected, 7).toString());
                    account_pst.setString(3, employee_table.getValueAt(selected, 8).toString());
                    account_pst.setInt(4, Integer.valueOf(employee_table.getValueAt(selected, 0).toString()));
                    account_pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Update Account Successfully");
            }catch(SQLException ex){
                    JOptionPane.showMessageDialog(null, "Error Something Go Wrong");
                }
                clear_Employees();
                show_Employees();
    }//GEN-LAST:event_bt_updateMouseClicked

    private void tf_emailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_emailFocusGained
        tf_email.setText("");
    }//GEN-LAST:event_tf_emailFocusGained

    private void bt_pay_salaryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_pay_salaryMouseClicked
        java.util.Date utilDate = new java.util.Date();
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
        if((!tf_id.getText().equals("")) && (!tf_id.getText().equals("ID"))){
           try{
                Class.forName("org.postgresql.Driver");
            }catch (ClassNotFoundException ex){
                ex.printStackTrace();
            }
            try{
                Connection con = DriverManager.getConnection(url, unameDB, passDB);
                String salary_query = "INSERT INTO public.salary_payment(\n" +"	id, date, employee_id)\n" +"	VALUES (?, ?, ?);";
                PreparedStatement salary_pst = con.prepareStatement(salary_query);
                salary_pst.setInt(1, countID() + 1);
                salary_pst.setDate(2, sqlDate);
                salary_pst.setInt(3, Integer.valueOf(tf_id.getText()));
                salary_pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Pay Salary Successfully");
            }catch(SQLException ex){
                JOptionPane.showMessageDialog(null, "Error Something Go Wrong");
                ex.printStackTrace();
            }
            clear_Employees();
            show_Employees();
        }else{
            JOptionPane.showMessageDialog(null, "Please fill all blank space");
        } 
    }//GEN-LAST:event_bt_pay_salaryMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_add;
    private javax.swing.JButton bt_pay_salary;
    private javax.swing.JButton bt_remove;
    private javax.swing.JButton bt_update;
    private javax.swing.JComboBox<String> cbb_typeofjob;
    private javax.swing.JTable employee_table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tf_address;
    private javax.swing.JTextField tf_email;
    private javax.swing.JTextField tf_fullname;
    private javax.swing.JTextField tf_id;
    private javax.swing.JTextField tf_password;
    private javax.swing.JTextField tf_phonenumber;
    private javax.swing.JTextField tf_salary;
    private javax.swing.JTextField tf_username;
    // End of variables declaration//GEN-END:variables
}
